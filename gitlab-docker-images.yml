stages:
    - build

# (split this one here, if the nvidia docker container needs it)
default:
  tags:
    - sccs
    - build
  image:
    name: docker:24.0.5-git
    entrypoint: [""]

build-cpu-image:
  stage: build
  allow_failure: false
  variables:
    GIT_STRATEGY: clone
  before_script:
    - git branch -vva
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    # (cf. https://stackoverflow.com/a/957978 )
    - export git_root=$(git rev-parse --show-toplevel)
    - export full_image_name="${CI_REGISTRY_USER}/${cpu_image_name}:${cpu_image_version}"
    - export file_changed=$(sh ${git_root}/.ci/is_changed.sh ${git_root}/.ci/docker-cpu/Dockerfile.base)
    - export image_exists=$(sh ${git_root}/.ci/does_image_exist.sh "${full_image_name}")
    - echo "file changed=${file_changed}, image exists=${image_exists}"
    - >
      if [ $file_changed -eq 1 ] || [ $image_exists -eq 0 ]; then
        echo "building a new image - ${full_image_name}" ;
        docker build -t "${full_image_name}" -f ${git_root}/.ci/docker-cpu/Dockerfile.base . ;
        docker push "${full_image_name}"
      else
        echo "image exists, Dockerfile was not modified. Skipping this step"
      fi


build-gpu-image:
  stage: build
  allow_failure: false
  variables:
    GIT_STRATEGY: clone
  before_script:
    - git branch -vva
    - pwd
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    # (cf. https://stackoverflow.com/a/957978 )
    - export git_root=$(git rev-parse --show-toplevel)
    - export full_image_name="${CI_REGISTRY_USER}/${gpu_image_name}:${gpu_image_version}"
    - export full_compiler_image_name="${CI_REGISTRY_USER}/gpu-ci-compiler-image:${gpu_image_version}"
    - export file_changed=$(sh ${git_root}/.ci/is_changed.sh ${git_root}/.ci/docker-gpu)
    - export image_exists=$(sh ${git_root}/.ci/does_image_exist.sh "${full_image_name}")
    - echo "file changed=${file_changed}, image exists=${image_exists}"
    - >
      if [ $file_changed -eq 1 ] || [ $image_exists -eq 0 ]; then
        echo "building a new image - ${full_image_name}" ;
        docker build -t "${full_compiler_image_name}" -f ${git_root}/.ci/docker-gpu/Dockerfile.compilers . ;
        docker build -t "${full_image_name}" --build-arg BASE_IMAGE_NAME=$full_compiler_image_name --build-arg SEISSOL_SHA_COMMIT=$CI_COMMIT_SHA -f ${git_root}/.ci/docker-gpu/Dockerfile.base . ;
        docker push "${full_image_name}"
      else
        echo "image exists, Dockerfile was not modified. Skipping this step"
      fi
